{"version":3,"sources":["Images/u5a_logo.svg","Images/pictorial_logo.svg","Images/email.svg","Images/workforce.svg","Images/training.svg","Images/infotainment.svg","Images/feedback.svg","Images/contact.svg","Images/pay.svg","logo.svg","Components/HeaderComponent/Header.jsx","Components/HomeComponent/Home.jsx","Pages/HomePage/Home.jsx","Pages/ContactPage/Contact.jsx","Pages/WorkForcePage/WorkForce.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","U5A","PictorialLogo","Email","withRouter","props","Card","style","width","height","onClick","history","push","Img","variant","WorkForce","Traning","Infotainment","Feedback","Contact","Pay","HomePage","ContactPage","WorkForcePage","App","exact","path","component","Home","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,yECA3CD,EAAOC,QAAU,IAA0B,kC,iNCiB5BC,EAVA,WACb,OACE,yBAAKC,UAAU,mBACT,yBAAKC,IAAKC,IAAKF,UAAU,gBACzB,yBAAKC,IAAKE,IAAgBH,UAAU,gBACpC,yBAAKC,IAAKG,IAAOJ,UAAU,kB,oHCgCtBK,G,MAAAA,aA/BF,SAACC,GACZ,OACE,6BACE,yBAAKN,UAAU,iBACf,kBAACO,EAAA,EAAD,CAAOC,MAAO,CAAEC,MAAO,QAASC,OAAO,SAAWC,QAAS,WAAKL,EAAMM,QAAQC,KAAK,cACjF,kBAACN,EAAA,EAAKO,IAAN,CAAUC,QAAQ,MAAMd,IAAKe,OAE/B,kBAACT,EAAA,EAAD,CAAOC,MAAO,CAAEC,MAAO,QAASC,OAAO,UACrC,kBAACH,EAAA,EAAKO,IAAN,CAAUC,QAAQ,MAAMd,IAAKgB,OAE/B,kBAACV,EAAA,EAAD,CAAOC,MAAO,CAAEC,MAAO,QAASC,OAAO,UACrC,kBAACH,EAAA,EAAKO,IAAN,CAAUC,QAAQ,MAAMd,IAAKiB,QAG/B,yBAAKlB,UAAU,iBAEf,kBAACO,EAAA,EAAD,CAAOC,MAAO,CAAEC,MAAO,QAASC,OAAO,UACrC,kBAACH,EAAA,EAAKO,IAAN,CAAUC,QAAQ,MAAMd,IAAKkB,OAE/B,kBAACZ,EAAA,EAAD,CAAOC,MAAO,CAAEC,MAAO,QAASC,OAAO,UACrC,kBAACH,EAAA,EAAKO,IAAN,CAAUC,QAAQ,MAAMd,IAAKmB,OAE/B,kBAACb,EAAA,EAAD,CAAOC,MAAO,CAAEC,MAAO,QAASC,OAAO,UACrC,kBAACH,EAAA,EAAKO,IAAN,CAAUC,QAAQ,MAAMd,IAAKoB,aCxBtBC,EATE,WACb,OACI,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,QCGKC,EARK,WAChB,OACI,6CCMOC,EARO,WAClB,OACI,6BACI,+CCyBGC,MAjBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWC,IACrC,kBAAC,IAAD,CAAOF,KAAK,aAAaC,UAAWJ,IACpC,kBAAC,IAAD,CAAOG,KAAK,WAAWC,UAAWL,IAClC,kBAAC,IAAD,CAAOI,KAAK,WAAWC,UAAWL,IAClC,kBAAC,IAAD,CAAOI,KAAK,WAAWC,UAAWL,IAClC,kBAAC,IAAD,CAAOI,KAAK,WAAWC,UAAWL,IAClC,kBAAC,IAAD,CAAOI,KAAK,WAAWC,UAAWL,MCVpBO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0ce69f89.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/u5a_logo.d366382c.svg\";","module.exports = __webpack_public_path__ + \"static/media/pictorial_logo.3aaf9ab7.svg\";","module.exports = __webpack_public_path__ + \"static/media/email.1c39ee0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/workforce.767cc2d7.svg\";","module.exports = __webpack_public_path__ + \"static/media/training.4ab52337.svg\";","module.exports = __webpack_public_path__ + \"static/media/infotainment.6e7dd9c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/feedback.12372e68.svg\";","module.exports = __webpack_public_path__ + \"static/media/contact.20bf6e02.svg\";","module.exports = __webpack_public_path__ + \"static/media/pay.451a3786.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\n\r\nimport './Header.css'\r\n\r\nimport U5A from \"../../Images/u5a_logo.svg\";\r\nimport PictorialLogo from \"../../Images/pictorial_logo.svg\";\r\nimport Email from '../../Images/email.svg'\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"HeaderContainer\">\r\n          <img src={U5A} className=\"HeaderImage\"/>\r\n          <img src={PictorialLogo}  className=\"HeaderImage\"/>\r\n          <img src={Email} className=\"HeaderImage\"/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport CardColoumn from 'react-bootstrap/CardColumns'\r\nimport {withRouter } from 'react-router-dom'\r\n// import Card from '../../Components/CardComponent/Card'\r\nimport Card from \"react-bootstrap/Card\";\r\nimport WorkForce from \"../../Images/workforce.svg\";\r\nimport Traning from '../../Images/training.svg'\r\nimport Infotainment from '../../Images/infotainment.svg'\r\nimport Feedback from '../../Images/feedback.svg'\r\nimport Contact from '../../Images/contact.svg'\r\nimport Pay from '../../Images/pay.svg'\r\nimport './Home.css'\r\n\r\nconst Home = (props) => {\r\n  return (\r\n    <div  >\r\n      <div className=\"HomeContainer\">\r\n      <Card  style={{ width: \"14rem\", height:\"15rem\" }} onClick={()=>{props.history.push('/Contact')}} >\r\n        <Card.Img variant=\"top\" src={WorkForce} />\r\n      </Card>\r\n      <Card  style={{ width: \"14rem\", height:\"15rem\" }} >\r\n        <Card.Img variant=\"top\" src={Traning} />\r\n      </Card>\r\n      <Card  style={{ width: \"14rem\", height:\"15rem\" }} >\r\n        <Card.Img variant=\"top\" src={Infotainment} />\r\n      </Card>\r\n      </div>\r\n      <div className=\"HomeContainer\">\r\n\r\n      <Card  style={{ width: \"14rem\", height:\"15rem\"}} >\r\n        <Card.Img variant=\"top\" src={Feedback} />\r\n      </Card>\r\n      <Card  style={{ width: \"14rem\", height:\"15rem\" }} >\r\n        <Card.Img variant=\"top\" src={Contact} />\r\n      </Card>\r\n      <Card  style={{ width: \"14rem\", height:\"15rem\" }} >\r\n        <Card.Img variant=\"top\" src={Pay} />\r\n      </Card>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Home);\r\n","import React from 'react'\r\nimport Header from '../../Components/HeaderComponent/Header'\r\nimport Home from '../../Components/HomeComponent/Home'\r\nconst HomePage = () => {\r\n    return (\r\n        <div>\r\n          <Header/>\r\n          <Home/>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react'\r\n\r\nconst ContactPage = () => {\r\n    return (\r\n        <div>\r\n            ContactPage\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactPage\r\n","import React from 'react'\r\n\r\nconst WorkForcePage = () => {\r\n    return (\r\n        <div>\r\n            <h1>WorkForcepage</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorkForcePage\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './Pages/HomePage/Home';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";  \nimport ContactPage from './Pages/ContactPage/Contact';\nimport WorkForcePage from './Pages/WorkForcePage/WorkForce';\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path='/u5a1' component={Home}/>\n      <Route path='/workforce' component={WorkForcePage}/>\n      <Route path='/contact' component={ContactPage}/>\n      <Route path='/contact' component={ContactPage}/>\n      <Route path='/contact' component={ContactPage}/>\n      <Route path='/contact' component={ContactPage}/>\n      <Route path='/contact' component={ContactPage}/>\n\n      {/* <Route path='/' component={Home}/> */}\n\n      </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}